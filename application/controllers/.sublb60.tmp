<?php

if (!defined('BASEPATH'))
    exit('No direct script access allowed');

class master_itemcategory extends CI_Controller {

    function __construct() {
        parent::__construct();

        $this->load->model('home_m');
        $this->load->model('admin/konfigurasi_menu_status_user_m');
        $this->load->model('global_m');
        $this->load->model('master_itemcategory_m');
        
        session_start();
    }
    public $tabel_utama ='sec_passwd';

    public function index() {
        if ($this->auth->is_logged_in() == false) {
            $this->login();
        } else {
            $data['multilevel'] = $this->user_m->get_data(0, $this->session->userdata('usergroup'));

            //$data ['nama'] = $this->home_m->get_nama_kantor ();
            $this->template->set('title', 'Home');
            $this->template->load('template/template1', 'global/index', $data);
        }
    }

    function home() {

        $menuId = $this->home_m->get_menu_id('master_cabang/home');
        $data['menu_id'] = $menuId[0]->menu_id;
        $data['menu_parent'] = $menuId[0]->parent;
        $data['menu_nama'] = $menuId[0]->menu_nama;
        $data['menu_header'] = $menuId[0]->menu_header;
        $this->auth->restrict($data['menu_id']);
        $this->auth->cek_menu($data['menu_id']);
        $data['group_user'] = $this->konfigurasi_menu_status_user_m->get_status_user();
        $data['zonasi'] = $this->global_m->tampil_zone();
            // print_r($data['zonasi']);
            // die();
        //$data['level_user'] = $this->sec_user_m->get_level_user();
         if (isset($_POST["idTmpAksiBtn"])) {
             $act=$_POST["idTmpAksiBtn"];
        if ($act==1) {
            $this->simpan();
        }elseif ($act==2) {
            $this->ubah();
        }elseif ($act=='3') {
            $this->hapus();
        } else {
            $data['multilevel'] = $this->user_m->get_data(0, $this->session->userdata('usergroup'));
            $data['menu_all'] = $this->user_m->get_menu_all(0);
            $data['karyawan'] = $this->global_m->tampil_id_desk('master_karyawan','id_kyw','nama_kyw','id_kyw');
            $data['goluser'] = $this->global_m->tampil_id_desk('sec_gol_user','goluser_id','goluser_desc','goluser_id');
            
            $data['statususer'] = $this->global_m->tampil_id_desk('sec_status_user','statususer_id','statususer_desc','statususer_id');
            $this->template->set('title', 'Master Item Category');
            $this->template->load('template/template_dataTable', 'master_itemcategory_v', $data);
        
            
        }
    } else {
      $data['multilevel'] = $this->user_m->get_data(0, $this->session->userdata('usergroup'));
            $data['menu_all'] = $this->user_m->get_menu_all(0);
            $data['karyawan'] = $this->global_m->tampil_id_desk('master_karyawan','id_kyw','nama_kyw','id_kyw');
            $data['goluser'] = $this->global_m->tampil_id_desk('sec_gol_user','goluser_id','goluser_desc','goluser_id');
            $data['statususer'] = $this->global_m->tampil_id_desk('sec_status_user','statususer_id','statususer_desc','statususer_id');
            
            $this->template->set('title', 'Master Branch');
            $this->template->load('template/template_dataTable', 'master_itemcategory_v', $data);
        }
    }

    function get_server_side() {
        $requestData = $_REQUEST;
//        print_r($requestData);die();
        $columns = array(
            // datatable column index  => database column name
            0 => 'IClassID',
            1 => 'ClassCode',
            2 => 'IClassName',
            3 => 'Priod'
            
            // 5 => 'UpdateDate',
            // 6 => 'UpdateBy',
            // 7 => 'DeleteDate',
            // 8 => 'DeleteBy',
            // 9 => 'Is_trash'
           
        );
        $sql = "SELECT * from ams_itemcategory ";
        $totalData = $this->global_m->tampil_semua_array($sql)->num_rows(); 
        $totalFiltered = $totalData;

        if (!empty($requestData['search']['value'])) {
            // if there is a search parameter
            $sql.=" WHERE UPPER(IClassID::character varying) LIKE '" . strtoupper($requestData['search']['value']) . "%' ";    // $requestData['search']['value'] contains search parameter
            $sql.=" OR UPPER(ClassCode::character varying) LIKE '" . strtoupper($requestData['search']['value']) . "%' ";
            $sql.=" OR UPPER(IClassName::character varying) LIKE '" . strtoupper($requestData['search']['value']) . "%' ";
            $sql.=" OR UPPER(Priod::character varying) LIKE '" . strtoupper($requestData['search']['value']) . "%' ";
            
            // $sql.=" OR UPPER(UpdateDate::character varying) LIKE '" . strtoupper($requestData['search']['value']) . "%' ";
            // $sql.=" OR UPPER(UpdateBy::character varying) LIKE '" . strtoupper($requestData['search']['value']) . "%' ";
            // $sql.=" OR UPPER(DeleteDate::character varying) LIKE '" . strtoupper($requestData['search']['value']) . "%' ";
            // $sql.=" OR UPPER(DeleteBy::character varying) LIKE '" . strtoupper($requestData['search']['value']) . "%' ";
            // $sql.=" OR UPPER(Is_trash::character varying) LIKE '" . strtoupper($requestData['search']['value']) . "%' ";

            $sql.=" ORDER BY " . $columns[$requestData['order'][0]['column']] . "   " . $requestData['order'][0]['dir'] . " OFFSET ". $requestData['start'] . " ROWS FETCH NEXT " . $requestData['length'] . " ROWS ONLY  ";
             
            $totalData = $this->global_m->tampil_semua_array($sql)->num_rows(); 
            $totalFiltered = $totalData;
        } else {

             $sql.=" ORDER BY " . $columns[$requestData['order'][0]['column']] . "   " . $requestData['order'][0]['dir'] . " OFFSET ". $requestData['start'] . " ROWS FETCH NEXT " . $requestData['length'] . " ROWS ONLY  ";
            
        }

        $row = $this->global_m->tampil_semua_array($sql)->result_array(); 
        
        $data = array();
        foreach ($row as $row) {
            # code...
            // preparing an array
            $nestedData = array();
           
            $nestedData[] = $row["IClassID"];
            $nestedData[] = $row["ClassCode"];
            $nestedData[] = $row["IClassName"];
            $nestedData[] = $row["Priod"];
            // $nestedData[] = $row["UpdateDate"];
            // $nestedData[] = $row["UpdateBy"];
            // $nestedData[] = $row["DeleteDate"];
            // $nestedData[] = $row["DeleteBy"];
            // $nestedData[] = $row["Is_trash"];




            $data[] = $nestedData;
        }

        $json_data = array(
            "draw" => intval($requestData['draw']), // for every request/draw by clientside , they send a number as a parameter, when they recieve a response/data they first check the draw number, so we are sending same number in draw. 
            "recordsTotal" => intval($totalData), // total number of records
            "recordsFiltered" => intval($totalFiltered), // total number of records after searching, if there is no searching then totalFiltered = totalData
            "data" => $data   // total data array
        );

        echo json_encode($json_data);  
    }

   public function getUserInfo() {
        $this->CI = & get_instance(); //and a.kcab_id<>'1100'
        $rows = $this->master_itemcategory_m->getUserInfo();
        $data['data'] = array();
        foreach ($rows as $row) {

            $array = array(
                                 
               'IClassID' => trim($row->IClassID),
               'ClassCode' => trim($row->ClassCode),
               'IClassName' => trim($row->IClassName),
               'Priod' => trim($row->Priod)
            
               
            );

            array_push($data['data'], $array);
        }

        $this->output->set_output(json_encode($data));
    }

    function simpan() {

       $id = $this->master_itemcategory_m->getIdMax();  
       $id_kyw=(int)$this->session->userdata('id_kyw');
       $IClassID = trim($this->input->post('IClassID'));
       $ClassCode = trim($this->input->post('ClassCode'));
       $IClassName = trim($this->input->post('IClassName'));
       $Priod = trim($this->input->post('Priod'));
      

        
        $data = array(
            
            'IClassID' => $id,
            'ClassCode' => $ClassCode,
            'IClassName' => $IClassName,
            'Priod' => $Priod,
            'CreateBy' => $id_kyw,
            'CreateDate' => date('Y-m-d'),
            
            
        );
        $model = $this->global_m->simpan('ams_itemcategory', $data);
        if ($model) {
            $notifikasi = Array(
                'msgType' => 'success',
                'msgTitle' => 'Success',
                'msg' => 'Data Berhasil Disimpan'
            );
        } else {
            $notifikasi = Array(
                'msgType' => 'error',
                'msgTitle' => 'Error',
                'msg' => 'Data Gagal Disimpan'
            );
        }
        $this->session->set_flashdata('notif', $notifikasi);
        //echo $model;
        redirect('/master_itemcategory/home');
        
    }

    function ubah() {
   
        $id = trim($this->input->post(''));
        $id_kyw=(int)$this->session->userdata('id_kyw');
        $IClassID = trim($this->input->post('IClassID'));
        $ClassCode = trim($this->input->post('ClassCode'));
        $IClassName = trim($this->input->post('IClassName'));
        $Priod = trim($this->input->post('Priod'));
      
       
        
        $data = array(
            'IClassID' => $id,
            'ClassCode' => $ClassCode,
            'IClassName' => $IClassName,
            'Priod' => $Priod,
            'CreateBy' => $id_kyw,
            'CreateDate' => date('Y-m-d'),
            
        );
        $model = $this->global_m->ubah('ams_itemcategory', $data,'IClassID',$id);
        if ($model) {
            $notifikasi = Array(
                'msgType' => 'success',
                'msgTitle' => 'Success',
                'msg' => 'Data Berhasil Diubah'
            );
        } else {
            $notifikasi = Array(
                'msgType' => 'error',
                'msgTitle' => 'Error',
                'msg' => 'Data Berhasil Diubah'
            );
        }
        $this->session->set_flashdata('notif', $notifikasi);
        //echo $model;
        redirect('/master_itemcategory/home');
    }

    function hapus() {
        $this->CI = & get_instance();
        $id = trim($this->input->post('IClassID'));
        $model = $this->global_m->deleteUser('ams_itemcategory','IClassID',$id);
        if ($model) {
            $notifikasi = Array(
                'msgType' => 'success',
                'msgTitle' => 'Success',
                'msg' => 'Data Berhasil Dihapus'
            );
        } else {
            $notifikasi = Array(
                'msgType' => 'error',
                'msgTitle' => 'Error',
                'msg' => 'Data Berhasil Dihapus'
            );
        }
         $this->session->set_flashdata('notif', $notifikasi);
        //echo $model;
         redirect('/master_itemcategory/home');
    }

}

/* End of file sec_user.php */
/* Location: ./application/controllers/sec_user.php */